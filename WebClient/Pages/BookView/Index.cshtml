@page
@model WebClient.Pages.BookView.IndexModel

@{
    ViewData["Title"] = "Book List";
}

<h1>Books</h1>

<p>
    <a asp-page="Create">Create New</a>
</p>

<table class="table">
    <thead>
        <tr>
            <th>@Html.DisplayNameFor(model => model.Book[0].Title)</th>
            <th>@Html.DisplayNameFor(model => model.Book[0].Author)</th>
            <th>@Html.DisplayNameFor(model => model.Book[0].CreatedAt)</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
    @foreach (var item in Model.Book)
    {
        <tr>
            <td>@item.Title</td>
            <td>@item.Author</td>
            <td>@item.CreatedAt.ToShortDateString()</td>
            <td>
                <a asp-page="Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-page="Details" asp-route-id="@item.Id">Details</a> |
                <a asp-page="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
    }
    </tbody>
</table>

<div class="pagination mt-3">
    @if (Model.HasPreviousPage)
    {
        <a class="btn btn-sm btn-outline-primary"
           href="?Page=@(Model.Page - 1)">Previous</a>
    }
    else
    {
        <a class="btn btn-sm btn-outline-secondary disabled">Previous</a>
    }

    <span class="mx-2">Page @Model.Page</span>

    @if (Model.HasNextPage)
    {
        <a class="btn btn-sm btn-outline-primary"
           href="?Page=@(Model.Page + 1)">Next</a>
    }
    else
    {
        <a class="btn btn-sm btn-outline-secondary disabled">Next</a>
    }
</div>

